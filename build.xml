<?xml version="1.0"?>
<project name = "lab3" default = "build" basedir=".">
    <property file = "build.properties"/>
    <path id="jar_path">
        <fileset file="${src.lib}/*.jar"/>
        <pathelement path="${build.snap_cla}"/>
    </path>
    <path id="test_path">
        <fileset file="${src.lib}/*.jar"/>
    </path>
    <tstamp>
        <format property="buildtime"  pattern="yyyy-MM-dd-HH:mm:ss"/>
    </tstamp>
    <!--clean-->
    <target name="clean">
        <echo message="Deleting result"/>
        <delete file="${build.dir}/lab3.jar"/>
        <delete dir="${build.dir}"/>
    </target>
    <!--init-->
    <target name="init">
        <echo message="Creating basic directories"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.cla}"/>
        <mkdir dir="${build.snap}"/>
        <mkdir dir="${build.inf}"/>
        <mkdir dir="${build.rec}"/>
        <mkdir dir="${build.str}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.snap_cla}"/>
        <mkdir dir="${build.test}"/>
        <mkdir dir="${build.doc}"/>
        <mkdir dir="${build.md5}"/>
        <mkdir dir="${build.sha}"/>
        <mkdir dir="${build.svn}"/>
        <mkdir dir="${build.diff}"/>
    </target>

    <!--compile-->
    <target name="compile" depends="clean,init">
        <echo message="Compile all .java files"/>
        <javac includeantruntime="true" destdir="${build.snap_cla}" srcdir="${src.java}">
            <classpath refid="jar_path"/>
        </javac>
    </target>
    <!--build-->
    <target name="build" depends="compile">
        <echo message="build jar"/>
        <copy todir="${build.snap_cla}">
            <fileset file="${src.hiber}/**"/>
        </copy>
        <copy todir="${build.cla}">
            <fileset dir="${build.snap_cla}"/>
        </copy>
        <copy todir="${build.snap}">
            <fileset dir="${src.web}"/>
        </copy>
        <copy todir="${build.lib}">
            <fileset dir="${src.lib}"/>
        </copy>
        <jar destfile="${build.dir}/lab3.jar" update="true">
            <fileset dir="${build.snap}" excludes="**/**/Junit*,**/**/TestRunner.class,doc"/>
            <manifest>
                <attribute name="Main-Class" value="${main_class}"/>
                <attribute name="Build-Jdk" value="version 1.8.0_202"/>
            </manifest>
        </jar>
    </target>
    <!--test-->
    <target name="test" depends="build">
        <echo message="Testing your project with junit"/>
        <junit>
            <classpath>
                <pathelement location="${build.snap_cla}"/>
                <pathelement location="${build.lib}/junit-4.12.jar"/>
                <pathelement location="${build.lib}/hamcrest-core-1.3.jar"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
            <batchtest todir="${build.test}">
                <fileset dir="${build.snap_cla}">
                    <include name="Junit*.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <!--doc-->
    <target name="doc" depends="build">
        <echo message="Creating documentation"/>
        <javadoc sourcepath="${src.java}" destdir="${build.doc}"/>

        <touch file="${build.md5}/total.MD5"/>
        <checksum totalproperty="md5" todir="${build.md5}">
            <fileset dir="${src.java}"/>
        </checksum>
        <echo file="${build.md5}/total.MD5">${md5}</echo>
        <property name="md5" value="${build.md5}/total.MD5"/>

        <touch file="${build.sha}/total.SHA-1"/>
        <checksum totalproperty="sha" todir="${build.sha}" algorithm="SHA-1">
            <fileset dir="${src.java}"/>
        </checksum>
        <echo file="${build.sha}/total.SHA-1">${sha}</echo>
        <property name="sha" value="${build.sha}/total.SHA-1"/>
        <jar destfile="${build.dir}/lab3.jar" update="true">
            <fileset dir="${build.snap}" excludes="**/**/Junit*,**/**/TestRunner.class"/>
            <manifest>
                <attribute name="Main-Class" value="${main_class}"/>
                <attribute name="Build-Jdk" value="version 1.8.0_202"/>
                <attribute name="MD5" value="${md5}"/>
                <attribute name="SHA" value="${sha}"/>
            </manifest>
        </jar>
        <delete file="${build.md5}/total.MD5"/>
        <delete file="${build.md5}/total.sha"/>
    </target>
    <!--set for svn-->
    <path id="to_svn">
        <fileset dir="${src.lib}" caseSensitive="false">
            <include name="*.jar" />
        </fileset>
    </path>

    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="to_svn"/>
    <svnSetting id="svn.setting" svnkit="true" username="x1761" password="163752410" javahl="false" />

    <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${src.lib}/ant-contrib-1.0b3.jar"/>

    <!--diff-->
    <target name="checkout">
        <svn refid="svn.setting">
            <checkout url="svn://svn.svnbucket.com/x1761/test1/" revision="HEAD" destPath="${svn.dir}" />
        </svn>
        <copy todir="${svn.dir}/trunk">
            <fileset dir="${src.dir}"/>
        </copy>
    </target>
    <target name="update">
        <svn refid="svn.setting">
            <update revision="HEAD" dir="${svn.dir}/trunk"/>
        </svn>
    </target>
    <target name="add">
        <copy todir="${svn.dir}/trunk" force="true">
            <fileset dir="${src.dir}"/>
        </copy>
        <svn refid="svn.setting">
            <add dir="${svn.dir}/trunk" force="true"/>
        </svn>
    </target>
    <target name="commit">
        <svn refid="svn.setting">
            <commit dir="${svn.dir}/trunk" message="${buildtime}"/>
        </svn>
    </target>

    <target name="diff">
        <echo message="Checking all differences"/>
        <svn refid="svn.setting">
            <diff oldPath="${src.java}" outFile="${build.diff}/diff.txt"/>
        </svn>
        <for list="${classes}" delimiter="," param = "temp">
            <sequential>
                <fileset id="build.failures" dir="${build.diff}" includes="diff.txt">
                    <contains text="@{temp}"/>
                </fileset>
                <if>
                    <resourcecount when="gt" count="0" refid="build.failures" />
                    <then>
                        <echo message="The modification contains the specified class: '@{temp}', cannot be submitted"/>
                        <property name="boolean" value="false"/>
                    </then>
                </if>
            </sequential>
        </for>
        <condition property="boolean.set" else="false">
            <isset property="boolean"/>
        </condition>
        <if>
            <or>
            <length length="0"  file="${build.diff}/diff.txt"/>
            <istrue value="${boolean.set}"/>
            </or>
            <then>
                <echo message="Please revert the changes"/>
            </then>
            <else>
                <antcall target="add"/>
                <antcall target="commit"/>
                <antcall target="update"/>
            </else>
        </if>
    </target>
</project>